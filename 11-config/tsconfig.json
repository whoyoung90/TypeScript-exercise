{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Projects */
    // "incremental": true, // 이전 컴파일과 비교해서 수정된 사항이 없다면 그 부분을 유지하고 "수정된 내용만 컴파일" => (장점) 컴파일 시간이 빨라짐 (단점) 이전 컴파일 정보를 보관해야 하므로 PC 용량 증가
    // "composite": true, // (incremental과 함께 사용) 이전에 빌드된 정보들을 기억하고 있어서 다음 빌드시 더 빠르게 빌드되도록 도와줌
    // "tsBuildInfoFile": "./.tsbuildinfo", // "incremental: true"이면 관련된 정보들을 담을 수 있는 파일을 지정

    /* Language and Environment */
    "target": "ES5", // 어떤 버전으로 컴파일할지 설정
    // "lib": [], // 어떤 라이브러리를 이용할 것인지 선택적으로 결정 (보통은 lib를 따로 선택하지 않고 target에서 따라나오는 것을 이용)
    // "jsx": "preserve", // 리액트와 관련된 것을 사용할 것인지 설정

    /* Modules */
    "module": "ES6", // 컴파일 될때 모듈을 어떻게 구현할 것인지 결정 => 노드환경: commonjs, 브라우저환경: ES
    "rootDir": "./src", //Specify the root folder within your source files.

    /* JavaScript Support */
    // "allowJs": true, // 프로젝트에서 타입스크립트와 자바스크립트 파일을 섞어서 쓸건지
    // "checkJs": true, // 자바스크립트 파일에서도 에러(경고) 뜰 수 있도록 설정 => allowJs + checkJs 같이 true로 해서 진행

    /* Emit */
    // "declaration": true, // 내가 작성한 코드를 라이브러리 형식으로 다른 사람에게 제공할 것이 아니라면 잘 쓰지 않는다
    "sourceMap": true, // 디버깅시 매우 유용 (Create source map files for emitted JavaScript files)
    // "outFile": "./", // 작성한 다수의 타입스크립트 파일을 딱 하나의 자바스크립트 파일로 만들때 사용
    "outDir": "./build", // Specify an output folder for all emitted files.
    // "removeComments": true, // 코멘트를 전부 제거
    // "noEmit": true, // 컴파일 에러 체크만 하고, 실제 자바스크립트 코드로 변환하는 일은 하지 않는다. (컴파일 에러가 있는지 확인만 하고 싶을 때 사용!)

    /* Interop Constraints */
    // "isolatedModules": true, // 각각의 파일을 다른 모듈로 변환해서 만드는 것
    "esModuleInterop": true, // Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility.
    "forceConsistentCasingInFileNames": true, // Ensure that casing is correct in imports.

    /* Type Checking */
    "strict": true, // 항상 엄격한 확인을 받을 수 있는 strict 모드

    /* Completeness */
    "skipLibCheck": true // Skip type checking all .d.ts files
  },
  // "exclude": ["./src/dev.ts"],
  "include": ["./src/main.ts", "./src/logging/logging.ts"]
}
